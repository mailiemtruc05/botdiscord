import discord
import asyncio
import os
import random
import re
from discord.ext import commands
from datetime import datetime, timedelta
from discord.ui import View, Button
from flask import Flask
from threading import Thread

intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

MEM_ROLE_NAME = "MEM"
DEV_ROLE_NAME = "DEV"
CATEGORY_BUY = "Ticket Mua H√†ng"
CATEGORY_SUPPORT = "Ticket H·ªó tr·ª£/B·∫£o H√†nh"

# L∆∞u giveaway ƒëang ho·∫°t ƒë·ªông ho·∫∑c c√≥ th·ªÉ reroll
giveaway_views = {}

class TicketView(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="Mua H√†ng", style=discord.ButtonStyle.green, custom_id="buy")
    async def buy_button(self, interaction: discord.Interaction, button: Button):
        await create_ticket(interaction, "mua-hang", CATEGORY_BUY)

    @discord.ui.button(label="H·ªó Tr·ª£/B·∫£o H√†nh", style=discord.ButtonStyle.red, custom_id="support")
    async def support_button(self, interaction: discord.Interaction, button: Button):
        await create_ticket(interaction, "ho-tro", CATEGORY_SUPPORT)

async def create_ticket(interaction: discord.Interaction, ticket_type: str, category_name: str):
    guild = interaction.guild
    member = interaction.user

    # Ki·ªÉm tra role MEM
    mem_role = discord.utils.get(guild.roles, name=MEM_ROLE_NAME)
    if mem_role not in member.roles:
        return await interaction.response.send_message("B·∫°n kh√¥ng c√≥ quy·ªÅn m·ªü ticket.", ephemeral=True)

    # Ki·ªÉm tra xem ƒë√£ c√≥ ticket ch∆∞a
    for channel in guild.text_channels:
        if (channel.name.startswith("mua-hang") or channel.name.startswith("ho-tro")) and channel.topic == f"user:{member.id}":
            return await interaction.response.send_message("B·∫°n ƒë√£ c√≥ m·ªôt ticket ƒëang m·ªü.", ephemeral=True)

    # T·∫°o category n·∫øu ch∆∞a c√≥
    category = discord.utils.get(guild.categories, name=category_name)
    if category is None:
        category = await guild.create_category(category_name)

    # T·∫°o permission cho channel
    overwrites = {
        guild.default_role: discord.PermissionOverwrite(view_channel=False),
        member: discord.PermissionOverwrite(view_channel=True, send_messages=True),
    }

    dev_role = discord.utils.get(guild.roles, name=DEV_ROLE_NAME)
    if dev_role:
        overwrites[dev_role] = discord.PermissionOverwrite(view_channel=True, send_messages=True)

    # T·∫°o ticket channel v√† ƒë√°nh d·∫•u topic ƒë·ªÉ d·ªÖ ki·ªÉm tra
    ticket_channel = await guild.create_text_channel(
        name=f"üéü‚îÉ{ticket_type}-{member.name}",
        category=category,
        overwrites=overwrites,
        topic=f"user:{member.id}"
    )

    await ticket_channel.send(
        f"{member.mention} ƒë√£ m·ªü ticket `{ticket_type.replace('-', ' ').title()}`. <@&1351227654782714040> s·∫Ω h·ªó tr·ª£ b·∫°n."
    )

    embed = discord.Embed(
    title="Vui L√≤ng Ch·ªù DEV X√≠u Nh√©.\nDEV S·∫Ω Tr·∫£ L·ªùi Nhanh Nh·∫•t C√≥ Th·ªÉ ·∫†",
    color=discord.Color.blue()
    )
    embed.set_thumbnail(url="https://media.discordapp.net/attachments/1351234840749670430/1351423170443477023/logo2.png?ex=68222c28&is=6820daa8&hm=a2256de50600ffc0074e82e69fa2887477c9055c4b0f7e6c03fd0e4a179abb1b&=&format=webp&quality=lossless")
    embed.set_image(url="https://media.discordapp.net/attachments/1351234840749670430/1371308366030176377/ow.gif?ex=6822a9f0&is=68215870&hm=a521cfdb679132bbf79ebe91a08a52b149a81299fa1c396eb92882f679203eb9&=")  # ƒë·ªïi link ·∫£nh t√πy b·∫°n

    await ticket_channel.send(embed=embed, view=CloseTicketView())


    await interaction.response.send_message(f"Ticket c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o: {ticket_channel.mention}", ephemeral=True)


class CloseTicketView(View):
    def __init__(self):
        super().__init__(timeout=None)
        # ‚ùå X√ìA D√íNG N√ÄY V√å ƒê√É T·∫†O BUTTON B·∫∞NG DECORATOR ·ªû D∆Ø·ªöI
        # self.add_item(Button(label="ƒê√≥ng Ticket", style=discord.ButtonStyle.danger, custom_id="close_ticket"))

    @discord.ui.button(label="ƒê√≥ng Ticket", style=discord.ButtonStyle.danger, custom_id="close_ticket")
    async def close_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        dev_role = discord.utils.get(interaction.guild.roles, name=DEV_ROLE_NAME)
        if dev_role not in interaction.user.roles:
            return await interaction.response.send_message("B·∫°n kh√¥ng c√≥ quy·ªÅn ƒë√≥ng ticket n√†y.", ephemeral=True)

        await interaction.response.send_message("Ticket s·∫Ω b·ªã ƒë√≥ng sau 5 gi√¢y...", ephemeral=False)
        await asyncio.sleep(5)
        await interaction.channel.delete()

@bot.command()
@commands.has_role(DEV_ROLE_NAME)
async def sendticket(ctx):
    embed = discord.Embed(
        title="Ticket H·ªó Tr·ª£",
        description="N·∫øu b·∫°n c·∫ßn mua h√†ng ho·∫∑c h·ªó tr·ª£, h√£y b·∫•m v√†o c√°c n√∫t b√™n d∆∞·ªõi.\n**VUI L√íNG KH√îNG SPAM TICKET**",
        color=discord.Color.blue()
    )
    embed.set_thumbnail(url="https://media.discordapp.net/attachments/1351234840749670430/1351423170443477023/logo2.png?ex=68222c28&is=6820daa8&hm=a2256de50600ffc0074e82e69fa2887477c9055c4b0f7e6c03fd0e4a179abb1b&=&format=webp&quality=lossless")
    embed.set_image(url="https://media.discordapp.net/attachments/1351234840749670430/1371308366030176377/ow.gif?ex=6822a9f0&is=68215870&hm=a521cfdb679132bbf79ebe91a08a52b149a81299fa1c396eb92882f679203eb9&=")  # ƒë·ªïi link ·∫£nh t√πy b·∫°n

    await ctx.send(embed=embed, view=TicketView())
    await ctx.message.delete(delay=5)

@bot.command()
@commands.has_role(DEV_ROLE_NAME)
async def close(ctx):
    if ctx.channel.category and ctx.channel.category.name in [CATEGORY_BUY, CATEGORY_SUPPORT]:
        await ctx.send("ƒê√≥ng ticket...")
        await ctx.channel.delete()
    else:
        await ctx.send("L·ªánh n√†y ch·ªâ d√πng trong ticket.")


@bot.command()
@commands.has_role(DEV_ROLE_NAME)
async def thanhtoan(ctx, sotien: int, *, loi_nhan: str):
    await ctx.message.delete(delay=5)  # X√≥a l·ªánh ng∆∞·ªùi d√πng sau 5 gi√¢y
    if ctx.channel.category and ctx.channel.category.name in [CATEGORY_BUY, CATEGORY_SUPPORT]:
        bank_code = "VCB"
        account_no = "1034298524"
        account_name = "MAI LIEM TRUC"
        loi_nhan_encoded = loi_nhan.replace(" ", "+")
        account_name_encoded = account_name.replace(" ", "+")

        qr_url = (
            f"https://img.vietqr.io/image/{bank_code}-{account_no}-compact.png"
            f"?amount={sotien}&addInfo={loi_nhan_encoded}&accountName={account_name_encoded}"
        )

        # D·∫°ng m√¥ ph·ªèng khung input ƒë·∫πp m·∫Øt
        info_block = (
            f"```ini\n"
            f"Ng√¢n h√†ng:\nVietcombank\n\n"
            f"S·ªë T√†i Kho·∫£n:\n{account_no}\n\n"
            f"Ch·ªß T√†i Kho·∫£n:\n{account_name}\n\n"
            f"S·ªë Ti·ªÅn:\n{sotien:,} VND\n\n"
            f"N·ªôi dung chuy·ªÉn:\n{loi_nhan}\n\n"
            f"Ghi ch√∫:\nKh√°ch h√†ng vui l√≤ng g·ª≠i bill v√†o ticket.\n"
            f"```"
        )

        embed = discord.Embed(
            title="Th√¥ng Tin Thanh To√°n",
            description=info_block,
            color=discord.Color.green()
        )

        embed.set_image(url=qr_url)
        embed.set_footer(text="M·ªçi th·∫Øc m·∫Øc li√™n h·ªá OW.")

        await ctx.send(embed=embed)
    else:
        await ctx.send("L·ªánh n√†y ch·ªâ d√πng trong k√™nh ticket.")


@bot.command()
@commands.has_role(DEV_ROLE_NAME)
async def banggia(ctx):
    channel = discord.utils.get(ctx.guild.text_channels, name="üì∞‚îÇb·∫£ng-gi√°")
    if channel is None:
        await ctx.send("Kh√¥ng t√¨m th·∫•y k√™nh üì∞‚îÇb·∫£ng-gi√°.")
        return

    embed = discord.Embed(
        title="OW STORE",
        description="**B·∫¢NG GI√Å OW STORE**",
        color=discord.Color.blue()
    )

    embed.add_field(
        name="D·ªãch v·ª• Auto Fram",
        value=(
            "‚Ä¢ Key ‚îÇPrice : 15k/ng√†y, 90k/tu·∫ßn, 160k/th√°ng, 300k/vv\n"
            "‚Ä¢ Key vƒ©nh vi·ªÖn v√† d√πng ƒë∆∞·ª£c t·∫•t c·∫£ c√°c lo·∫°i tool m√† OW STORE hi·ªán c√≥ ‚îÇPrice : 1tr2\n"
            "‚Ä¢ Vi·∫øt Auto theo y√™u c·∫ßu\n"
            "‚Ä¢ M·ªü üé´‚îÇticket ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt v·ªÅ Auto Fram"
        ),
        inline=False
    )

    embed.add_field(
        name="D·ªãch v·ª• c√†y thu√™ LV GTA5VN",
        value=(
            "‚Ä¢ Theo y√™u c·∫ßu\n"
            "‚Ä¢ SV2 t·ª´ LV0 -> LV25 ‚îÇPrice : 90k"
        ),
        inline=False
    )

    embed.add_field(
        name="D·ªãch v·ª• thi·∫øt k·∫ø ƒë·ªì h·ªça",
        value="‚Ä¢ V·∫Ω Logo, Banner, Poster, Social Post theo nhu c·∫ßu",
        inline=False
    )

    embed.add_field(
        name="D·ªãch v·ª• thi·∫øt k·∫ø discord",
        value=(
            "‚Ä¢ Thi·∫øt k·∫ø server discord theo y√™u c·∫ßu (v√≠ d·ª•: discord Gang, Store, Setup Bot theo y√™u c·∫ßu...) ‚îÇPrice: 50k\n"
            "‚Ä¢ Code bot discord theo y√™u c·∫ßu (bot ticket, t·∫°o m√£ qr, check ng∆∞·ªùi ch∆°i c·ªßa c√°c server,....) ‚îÇPrice: 100k-500k"
        ),
        inline=False
    )

    embed.add_field(
        name="D·ªãch v·ª• l√†m Excel, Word, PowerPoint, Canva",
        value=(
            "‚Ä¢ PowerPoint, Canva ‚îÇPrice: 8k/slide (c√†ng nhi·ªÅu gi√° c√†ng t·ªët)\n"
            "‚Ä¢ Word: T√πy theo y√™u c·∫ßu\n"
            "‚Ä¢ Excel: T√πy theo y√™u c·∫ßu"
        ),
        inline=False
    )

    embed.add_field(
        name="D·ªãch v·ª• c√†i c√°c ph·∫ßn m·ªÅm c·ªßa ADOBE v√† MICROSOFT",
        value=(
            "‚Ä¢ Combot Adobe Illustrator v√† Adobe Photoshop ‚îÇPrice : 150k\n"
            "‚Ä¢ Tr·ªçn b·ªô Microsoft Office ‚îÇPrice : 150k"
        ),
        inline=False
    )

    embed.set_thumbnail(url="https://media.discordapp.net/attachments/1351234840749670430/1351423170443477023/logo2.png?ex=68222c28&is=6820daa8&hm=a2256de50600ffc0074e82e69fa2887477c9055c4b0f7e6c03fd0e4a179abb1b&=&format=webp&quality=lossless")
    embed.set_image(url="https://media.discordapp.net/attachments/1351234840749670430/1371308366030176377/ow.gif?ex=6822a9f0&is=68215870&hm=a521cfdb679132bbf79ebe91a08a52b149a81299fa1c396eb92882f679203eb9&=")  # ƒë·ªïi link ·∫£nh t√πy b·∫°n

    await channel.send(embed=embed)
    await ctx.message.delete(delay=5)


@bot.event
async def on_member_join(member):
    # T√¨m k√™nh ch√†o m·ª´ng theo t√™n
    channel = discord.utils.get(member.guild.text_channels, name="üéâ‚îÇch√†o-m·ª´ng")
    if channel is None:
        return

    # Thay ID b√™n d∆∞·ªõi b·∫±ng ID th·∫≠t c·ªßa t·ª´ng k√™nh
    update_channel_id = 1351223923966083152  # üö®‚îÇupdate
    rule_channel_id = 1351226270414934091   # üìñ‚îÇlu·∫≠t-d·ªãch-v·ª•
    ticket_channel_id = 1351232807908675614 # üé´‚îÇticket
    price_channel_id = 1351224397427642490  # üì∞‚îÇb·∫£ng-gi√° (ID gi·∫£, thay b·∫±ng ID th·∫≠t)

    embed = discord.Embed(
        description=f"Ch√†o m·ª´ng {member.mention} ƒë√£ ƒë·∫øn v·ªõi **OW STORE**. Ch√∫ng t√¥i hy v·ªçng b·∫°n s·∫Ω h√†i l√≤ng khi ƒë·∫øn v·ªõi store c·ªßa ch√∫ng t√¥i.",
        color=discord.Color.blue()
    )

    embed.add_field(
        name="\u200b",
        value=f"‚Ä¢ H√£y xem k√™nh <#{update_channel_id}> ƒë·ªÉ nh·∫≠n th√¥ng b√°o m·ªói khi ch√∫ng t√¥i c√≥ thay ƒë·ªïi ho·∫∑c s·ª± ki·ªán h·∫•p d·∫´n.",
        inline=False
    )
    embed.add_field(
        name="\u200b",
        value=f"‚Ä¢ ƒê√¢y l√† lu·∫≠t khi s·ª≠ d·ª•ng d·ªãch v·ª• t·∫°i store c·ªßa ch√∫ng t√¥i <#{rule_channel_id}>.",
        inline=False
    )
    embed.add_field(
        name="\u200b",
        value=f"‚Ä¢ ƒê√¢y l√† n∆°i ƒë·ªÉ b·∫°n mua h√†ng ho·∫∑c c·∫ßn ch√∫ng t√¥i h·ªó tr·ª£ b·∫£o h√†nh <#{ticket_channel_id}>.",
        inline=False
    )
    embed.add_field(
        name="\u200b",
        value=f"‚Ä¢ ƒê√¢y l√† b·∫£ng gi√° d·ªãch v·ª• t·∫°i store c·ªßa ch√∫ng t√¥i <#{price_channel_id}>.",
        inline=False
    )

    embed.set_thumbnail(url="https://media.discordapp.net/attachments/1351234840749670430/1351423170443477023/logo2.png?ex=68222c28&is=6820daa8&hm=a2256de50600ffc0074e82e69fa2887477c9055c4b0f7e6c03fd0e4a179abb1b&=&format=webp&quality=lossless")
    embed.set_image(url="https://media.discordapp.net/attachments/1351234840749670430/1371308366030176377/ow.gif?ex=6822a9f0&is=68215870&hm=a521cfdb679132bbf79ebe91a08a52b149a81299fa1c396eb92882f679203eb9&=")  # ƒë·ªïi link ·∫£nh t√πy b·∫°n

    await channel.send(embed=embed)

#------------------------------------------------------------------------------------------------------------
class GiveawayView(View):
    def __init__(self, giveaway_message, end_callback=None):
        super().__init__(timeout=None)
        self.participants = set()
        self.giveaway_message = giveaway_message
        self.end_callback = end_callback

    @discord.ui.button(label="Tham gia Giveaway", style=discord.ButtonStyle.green, custom_id="giveaway_join")
    async def join_button(self, interaction: discord.Interaction, button: Button):
        user = interaction.user
        if user.id in self.participants:
            await interaction.response.send_message("B·∫°n ƒë√£ tham gia r·ªìi!", ephemeral=True)
        else:
            self.participants.add(user.id)
            await interaction.response.send_message("B·∫°n ƒë√£ tham gia giveaway!", ephemeral=True)
            await self.update_embed()

    async def update_embed(self):
        embed = self.giveaway_message.embeds[0]
        lines = embed.description.splitlines()

        # Lo·∫°i b·ªè d√≤ng c≈© n·∫øu ƒë√£ c√≥
        lines = [line for line in lines if not line.startswith("üë• S·ªë ng∆∞·ªùi tham gia:")]

        # Th√™m d√≤ng m·ªõi hi·ªÉn th·ªã s·ªë ng∆∞·ªùi tham gia
        lines.insert(2, f"üë• S·ªë ng∆∞·ªùi tham gia: **{len(self.participants)}**")

        embed.description = "\n".join(lines)
        await self.giveaway_message.edit(embed=embed, view=self)

    async def end_giveaway(self):
        if self.participants:
            participants = list(self.participants)
            while participants:
                winner_id = random.choice(participants)
                winner = self.giveaway_message.guild.get_member(winner_id)
                if winner:
                    # G·ª≠i tin nh·∫Øn ch√∫c m·ª´ng
                    try:
                        prize = self.giveaway_message.embeds[0].description.splitlines()[0].split("**")[1]
                    except Exception:
                        prize = "ph·∫ßn th∆∞·ªüng"
                    try:
                        await winner.send(
                            f"üéâ Ch√∫c m·ª´ng b·∫°n ƒë√£ th·∫Øng giveaway: **{prize}** üéâ"
                        )
                    except discord.Forbidden:
                        pass

                    await self.giveaway_message.channel.send(f"üéâ Giveaway k·∫øt th√∫c! Ng∆∞·ªùi th·∫Øng l√† {winner.mention} üéâ")
                    # X√≥a giveaway kh·ªèi b·ªô nh·ªõ v√¨ ƒë√£ c√≥ ng∆∞·ªùi th·∫Øng h·ª£p l·ªá
                    giveaway_views.pop(self.giveaway_message.id, None)
                    self.clear_items()
                    await self.giveaway_message.edit(view=None)
                    return
                else:
                    participants.remove(winner_id)

            # Kh√¥ng t√¨m ƒë∆∞·ª£c ng∆∞·ªùi th·∫Øng h·ª£p l·ªá (t·∫•t c·∫£ ng∆∞·ªùi tham gia kh√¥ng c√≤n trong server)
            await self.giveaway_message.channel.send(
                f"üéâ Giveaway k·∫øt th√∫c nh∆∞ng kh√¥ng th·ªÉ x√°c ƒë·ªãnh ng∆∞·ªùi th·∫Øng (kh√¥ng ai c√≤n trong server).\n"
                f"üëâ B·∫°n c√≥ th·ªÉ d√πng l·ªánh `!reroll {self.giveaway_message.id}` ƒë·ªÉ quay l·∫°i t·ª´ danh s√°ch ban ƒë·∫ßu."
            )
            # **Gi·ªØ giveaway trong giveaway_views ƒë·ªÉ reroll ƒë∆∞·ª£c**
            self.clear_items()
            await self.giveaway_message.edit(view=None)
        else:
            # Kh√¥ng c√≥ ng∆∞·ªùi tham gia
            await self.giveaway_message.channel.send("Giveaway k·∫øt th√∫c nh∆∞ng kh√¥ng c√≥ ng∆∞·ªùi tham gia n√†o.")
            giveaway_views.pop(self.giveaway_message.id, None)
            self.clear_items()
            await self.giveaway_message.edit(view=None)


def parse_time_string(time_str: str) -> int:
    time_units = {"d": 86400, "h": 3600, "m": 60, "s": 1}
    match = re.fullmatch(r"(\d+)([dhms])", time_str.lower())
    if not match:
        raise commands.BadArgument("ƒê·ªãnh d·∫°ng th·ªùi gian kh√¥ng h·ª£p l·ªá. D√πng v√≠ d·ª•: `1d`, `2h`, `30m`, `45s`")
    value, unit = match.groups()
    return int(value) * time_units[unit]

@bot.command()
@commands.has_role(DEV_ROLE_NAME)
async def giveaway(ctx, time_str: str, *, prize: str):
    await ctx.message.delete(delay=5)

    try:
        time_in_seconds = parse_time_string(time_str)
    except commands.BadArgument as e:
        return await ctx.send(str(e))

    end_time = datetime.utcnow() + timedelta(seconds=time_in_seconds)
    end_timestamp = int(end_time.timestamp())

    embed = discord.Embed(
        title="üéâ Giveaway ƒê√£ B·∫Øt ƒê·∫ßu! üéâ",
        description=f"Ph·∫ßn th∆∞·ªüng: **{prize}**\n"
                    f"K·∫øt th√∫c v√†o: <t:{end_timestamp}:F> (<t:{end_timestamp}:R>)\n"
                    "üë• S·ªë ng∆∞·ªùi tham gia: **0**\n\n"
                    "Nh·∫•n n√∫t b√™n d∆∞·ªõi ƒë·ªÉ tham gia giveaway!",
        color=discord.Color.gold()
    )

    giveaway_message = await ctx.send(embed=embed, view=None)
    view = GiveawayView(giveaway_message)
    giveaway_views[giveaway_message.id] = view
    await giveaway_message.edit(view=view)

    await asyncio.sleep(time_in_seconds)
    await view.end_giveaway()

@bot.command()
@commands.has_role(DEV_ROLE_NAME)
async def reroll(ctx, message_id: int):
    view = giveaway_views.get(message_id)
    if not view:
        return await ctx.send("Kh√¥ng t√¨m th·∫•y giveaway t∆∞∆°ng ·ª©ng ho·∫∑c ƒë√£ k·∫øt th√∫c.")

    participants = list(view.participants)
    if not participants:
        return await ctx.send("Kh√¥ng c√≥ ng∆∞·ªùi tham gia trong giveaway n√†y.")

    while participants:
        winner_id = random.choice(participants)
        winner = ctx.guild.get_member(winner_id)
        if winner:
            await ctx.send(f"Quay l·∫°i: Ng∆∞·ªùi th·∫Øng m·ªõi l√† {winner.mention} üéâ")
            try:
                await winner.send("B·∫°n ƒë√£ ƒë∆∞·ª£c ch·ªçn l·∫°i l√† ng∆∞·ªùi th·∫Øng giveaway!")
            except discord.Forbidden:
                pass
            return
        else:
            participants.remove(winner_id)

    await ctx.send("Kh√¥ng th·ªÉ t√¨m th·∫•y ng∆∞·ªùi n√†o c√≤n trong server ƒë·ªÉ ch·ªçn l·∫°i.")
#------------------------------------------------------------------------------------------------------------


@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingRole):
        await ctx.send("B·∫°n kh√¥ng c√≥ quy·ªÅn ƒë·ªÉ d√πng l·ªánh n√†y.")

@bot.event
async def on_ready():
    # Th√™m view t√πy ch·ªânh
    bot.add_view(TicketView())

    # C·∫≠p nh·∫≠t tr·∫°ng th√°i bot
    activity = discord.Activity(type=discord.ActivityType.watching, name="OW STORE -  ƒêa d·ªãch v·ª•, gi√° h·ª£p l√Ω, h·ªó tr·ª£ t·∫≠n t√¢m üî•")
    await bot.change_presence(activity=activity)

    print(f'Bot is ready: {bot.user}')




app = Flask('')

@app.route('/')
def home():
    return "Bot is alive!"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

keep_alive()
bot.run(os.getenv("DISCORD_TOKEN"))
